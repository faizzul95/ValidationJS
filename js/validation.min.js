let validationErrors={},validationDebug=!1;function validationJs(e,t,i={},a="name"){validationErrors={};try{let n;if("string"==typeof e?n=document.getElementById(e.replace("#","")):n=e,!n)throw new Error("Form element not found");validationDebug&&(console.log("Validation started for form:",n),console.log("Rules:",t),console.log("Messages:",i));let l=!0;for(let e in t){const r=t[e];if(e.endsWith("[]")){const t=e.slice(0,-2),s=n.querySelectorAll(`[${a}="${e}"]`);0===s.length&&validationDebug&&console.warn(`Array field elements not found: ${e}`),s.forEach((e,s)=>{const o=`${t}_${s}`,d=getFieldValue(e),u=i[e]||{},c=u.label||t.replace(/_/g," ").replace(/\b\w/g,(e=>e.toUpperCase()));validationDebug&&console.log(`Validating array field: ${o}, value:`,d);const f=parseRules(r);for(let t of f){const r=validateRule(d,t,e,n,a);if(!r.valid){l=!1;const i=getErrorMessage(t,t,u,`${c} #${s+1}`,r.message);validationErrors[o]||(validationErrors[o]=[]),validationErrors[o].push(i),e.classList.add("error"),validationDebug&&console.log(`Validation failed for ${o}:`,i);break}}})}else{const t=n.querySelector(`[${a}="${e}"]`);if(!t){validationDebug&&console.warn(`Field element not found: ${e}`);continue}const s=getFieldValue(t),o=i[e]||{},d=o.label||e.replace(/_/g," ").replace(/\b\w/g,(e=>e.toUpperCase()));validationDebug&&console.log(`Validating field: ${e}, value:`,s);const u=parseRules(r);for(let i of u){const r=validateRule(s,i,t,n,a);if(!r.valid){l=!1;const a=getErrorMessage(e,i,o,d,r.message);validationErrors[e]||(validationErrors[e]=[]),validationErrors[e].push(a),t.classList.add("error"),validationDebug&&console.log(`Validation failed for ${e}:`,a);break}}}}return validationDebug&&(console.log("Validation completed. Is valid:",l),console.log("Errors:",validationErrors)),l}catch(e){return console.error("Validation error:",e),validationErrors._global=["Validation system error: "+e.message],!1}}function validationJsError(e="raw",t="single"){const i={};for(let e in validationErrors)validationErrors[e].length>0&&(i[e]=validationErrors[e][0]);return"raw"===e?i:"toastr"===e?void showToastrErrors(i,t):i}function validationJsDebug(e=!0){validationDebug=e}function getFieldValue(e){if("file"===e.type)return e.files;if("checkbox"===e.type)return e.checked;if("radio"===e.type){const t=e.closest("form").querySelector(`input[name="${e.name}"]:checked`);return t?t.value:""}return"SELECT"===e.tagName&&e.multiple?Array.from(e.selectedOptions).map((e=>e.value)):e.value}function parseRules(e){return"string"!=typeof e?[]:e.split("|").map((e=>{const t=e.split(":"),i=t[0],a=t.slice(1).join(":").split(",").filter((e=>""!==e));return{name:i,parameters:a}}))}function validateRule(e,t,i,a,n){const{name:l,parameters:r}=t;try{switch(l){case"required":return validateRequired(e,i);case"required_if":return validateRequiredIf(e,r,a,n);case"string":return validateString(e);case"numeric":case"double":case"float":return validateNumeric(e);case"integer":return validateInteger(e);case"email":return validateEmail(e);case"array":return validateArray(e);case"file":return validateFile(e);case"size":return validateSize(e,r,i);case"mimes":return validateMimes(e,r);case"min":return validateMin(e,r,i);case"max":return validateMax(e,r,i);case"between":return validateBetween(e,r,i);case"date":return validateDate(e);case"date_format":return validateDateFormat(e,r);case"after":return validateAfter(e,r);case"before":return validateBefore(e,r);case"after_or_equal":return validateAfterOrEqual(e,r,a,n);case"before_or_equal":return validateBeforeOrEqual(e,r,a,n);case"weekend":return validateWeekend(e);case"time":return validateTime(e);case"url":return validateUrl(e);case"boolean":return validateBoolean(e);case"confirmed":return validateConfirmed(e,i,a,n);case"alpha":return validateAlpha(e);case"alpha_num":return validateAlphaNum(e);case"same":return validateSame(e,r,a,n);case"different":return validateDifferent(e,r,a,n);case"in":return validateIn(e,r);case"not_in":return validateNotIn(e,r);case"regex":return validateRegex(e,r);case"json":return validateJson(e);case"ip":return validateIp(e);case"ipv4":return validateIpv4(e);case"ipv6":return validateIpv6(e);case"uuid":return validateUuid(e);case"digits":return validateDigits(e,r);case"digits_between":return validateDigitsBetween(e,r);case"currency":return validateCurrency(e,r);case"min_length":return validateMinLength(e,r);case"max_length":return validateMaxLength(e,r);case"alpha_dash":return validateAlphaDash(e);case"lowercase":return validateLowercase(e);case"uppercase":return validateUppercase(e);case"decimal":return validateDecimal(e,r);case"gt":return validateGreaterThan(e,r,a,n);case"lt":return validateLessThan(e,r,a,n);case"lte":return validateLessThanOrEqual(e,r,a,n);case"dimensions":return validateDimensions(e,r);case"nullable":return validateNullable(e);case"sometimes":return{valid:!0};case"required_with":return validateRequiredWith(e,r,a,n);case"required_unless":return validateRequiredUnless(e,r,a,n);case"contains":return validateContains(e,r);case"doesnt_contain":return validateDoesntContain(e,r);case"accepted":return validateAccepted(e);case"image":return validateImage(e);default:return{valid:!0}}}catch(t){return console.error(`Error validating rule ${l}:`,t),{valid:!1,message:`Validation error for rule ${l}`}}}function validateRequired(e,t){return"file"===t.type?{valid:e&&e.length>0}:Array.isArray(e)?{valid:e.length>0}:{valid:null!==e&&void 0!==e&&""!==String(e).trim()}}function validateRequiredIf(e,t,i,a){if(t.length<3)return{valid:!0};const[n,l,...r]=t,s=i.querySelector(`[${a}="${n}"]`);if(!s)return{valid:!0};const o=getFieldValue(s);let d=!1;switch(l){case"=":case"==":d=r.includes(String(o));break;case"!=":d=!r.includes(String(o))}return d?validateRequired(e,[],i,a):{valid:!0}}function validateString(e){return{valid:"string"==typeof e||null===e||void 0===e||""===e}}function validateNumeric(e){return""===e||null===e||void 0===e?{valid:!0}:"string"==typeof e&&/[eE]/.test(e)?{valid:!1}:{valid:!isNaN(e)&&!isNaN(parseFloat(e))}}function validateInteger(e){return""===e||null===e||void 0===e?{valid:!0}:"string"==typeof e&&/[eE]/.test(e)?{valid:!1}:{valid:Number.isInteger(Number(e))}}function validateEmail(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}}function validateArray(e){if(""===e||null===e||void 0===e)return{valid:!0};return"string"==typeof e&&(e=e.split(",").map((e=>e.trim())).filter((e=>""!==e))),{valid:Array.isArray(e)}}function validateFile(e){return{valid:e&&e instanceof FileList}}function validateSize(e,t,i){if(!e||0===e.length)return{valid:!0};const a=t[0]?parseFloat(t[0]):4,n=1048576*a;if("file"===i.type)for(let t of e)if(t.size>n)return{valid:!1};return{valid:!0}}function validateMimes(e,t){if(!e||0===e.length)return{valid:!0};const i=t.map((e=>e.toLowerCase()));for(let t of e){if(!i.includes(t.name.toLowerCase().split(".").pop()))return{valid:!1}}return{valid:!0}}function isNumericValue(e){if("number"==typeof e)return!isNaN(e)&&isFinite(e);if("string"==typeof e){const t=e.trim();if(""===t||"."===t||"-"===t||"+"===t)return!1;if(!/^[+-]?(\d+\.?\d*|\.\d+)([eE][+-]?\d+)?$/.test(t))return!1;const i=parseFloat(t);return!isNaN(i)&&isFinite(i)}return!1}function validateMin(e,t,i){if(""===e||null===e||void 0===e)return{valid:!0};const a=parseFloat(t[0]);return"file"===i.type?{valid:e.length>=a}:isNumericValue(e)?{valid:parseFloat(e)>=a}:Array.isArray(e)||"string"==typeof e&&e.includes(",")?{valid:(Array.isArray(e)?e:e.split(",").map((e=>e.trim())).filter((e=>""!==e))).length>=a}:"string"==typeof e?{valid:e.length>=a}:{valid:parseFloat(e)>=a}}function validateMax(e,t,i){if(""===e||null===e||void 0===e)return{valid:!0};const a=parseFloat(t[0]);return"file"===i.type?{valid:e.length<=a}:isNumericValue(e)?{valid:parseFloat(e)<=a}:Array.isArray(e)||"string"==typeof e&&e.includes(",")?{valid:(Array.isArray(e)?e:e.split(",").map((e=>e.trim())).filter((e=>""!==e))).length<=a}:"string"==typeof e?{valid:e.length<=a}:{valid:parseFloat(e)<=a}}function validateBetween(e,t,i){if(""===e||null===e||void 0===e)return{valid:!0};const[a,n]=t.map((e=>parseFloat(e)));if("time"===i.type){const i=e=>{const[t,i]=e.split(":").map(Number);return 60*t+i},l=i(e),r=i(t[0]),s=i(t[1]);return{valid:l>=r&&l<=s}}return"string"==typeof e?{valid:e.length>=a&&e.length<=n}:{valid:parseFloat(e)>=a&&parseFloat(e)<=n}}function validateDate(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:!isNaN(new Date(e).getTime())}}function validateDateFormat(e,t){if(""===e||null===e||void 0===e)return{valid:!0};const i=t[0];if(!i)return{valid:!1};const a={["Y-m-d"]:/^\d{4}-\d{1,2}-\d{1,2}$/,["YYYY-MM-DD"]:/^\d{4}-\d{2}-\d{2}$/,["Y/m/d"]:/^\d{4}\/\d{1,2}\/\d{1,2}$/,["YYYY/MM/DD"]:/^\d{4}\/\d{2}\/\d{2}$/,["m/d/Y"]:/^\d{1,2}\/\d{1,2}\/\d{4}$/,["MM/DD/YYYY"]:/^\d{2}\/\d{2}\/\d{4}$/,["m-d-Y"]:/^\d{1,2}-\d{1,2}-\d{4}$/,["MM-DD-YYYY"]:/^\d{2}-\d{2}-\d{4}$/,["d/m/Y"]:/^\d{1,2}\/\d{1,2}\/\d{4}$/,["DD/MM/YYYY"]:/^\d{2}\/\d{2}\/\d{4}$/,["d-m-Y"]:/^\d{1,2}-\d{1,2}-\d{4}$/,["DD-MM-YYYY"]:/^\d{2}-\d{2}-\d{4}$/,["d.m.Y"]:/^\d{1,2}\.\d{1,2}\.\d{4}$/,["DD.MM.YYYY"]:/^\d{2}\.\d{2}\.\d{4}$/,["Y-m-d H:i"]:/^\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{2}$/,["YYYY-MM-DD HH:mm"]:/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$/,["Y-m-d H:i:s"]:/^\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{2}:\d{2}$/,["YYYY-MM-DD HH:mm:ss"]:/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$/,["H:i"]:/^\d{1,2}:\d{2}$/,["HH:mm"]:/^\d{2}:\d{2}$/,["H:i:s"]:/^\d{1,2}:\d{2}:\d{2}$/,["HH:mm:ss"]:/^\d{2}:\d{2}:\d{2}$/,["h:i A"]:/^\d{1,2}:\d{2} (AM|PM)$/i,["hh:mm A"]:/^\d{2}:\d{2} (AM|PM)$/i,c:/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}([+-]\d{2}:\d{2}|Z)$/,ISO8601:/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?([+-]\d{2}:\d{2}|Z)$/,["m/Y"]:/^\d{1,2}\/\d{4}$/,["MM/YYYY"]:/^\d{2}\/\d{4}$/,["m-Y"]:/^\d{1,2}-\d{4}$/,["MM-YYYY"]:/^\d{2}-\d{4}$/,["F j, Y"]:/^[A-Za-z]+ \d{1,2}, \d{4}$/,["M j, Y"]:/^[A-Za-z]{3} \d{1,2}, \d{4}$/,["j F Y"]:/^\d{1,2} [A-Za-z]+ \d{4}$/,["j M Y"]:/^\d{1,2} [A-Za-z]{3} \d{4}$/},n=a[i];return n?(n.test(e)?validateDateLogic(e,i):{valid:!1}):(console.warn(`Unsupported date format: ${i}`),{valid:!1})}function validateDateLogic(e,t){try{let i;if(t.includes("c")||t.includes("ISO8601"))i=new Date(e);else if(t.match(/^[HhMmSsAi:\s]+$/)){const t=(new Date).toISOString().split("T")[0],a=e.replace(/AM|PM/i,"").trim();let[n,l,r="00"]=a.split(":");e.match(/PM/i)&&12!==parseInt(n)?n=parseInt(n)+12:e.match(/AM/i)&&12===parseInt(n)&&(n="00"),i=new Date(`${t}T${n.padStart(2,"0")}:${l}:${r}`)}else if(t.includes("/")){const a=e.split("/");t.startsWith("Y")||t.startsWith("YYYY")?i=new Date(a[0],a[1]-1,a[2]):t.startsWith("m")||t.startsWith("MM")?i=new Date(a[2],a[0]-1,a[1]):(t.startsWith("d")||t.startsWith("DD"))&&(i=new Date(a[2],a[1]-1,a[0]))}else if(t.includes("-")){const a=e.split(/[-\s]/);if(t.startsWith("Y")||t.startsWith("YYYY")){const t=a[0]+"-"+a[1]+"-"+a[2];if(a.length>3){const e=a.slice(3).join(":");i=new Date(t+"T"+e)}else i=new Date(t)}else t.startsWith("m")||t.startsWith("MM")?i=new Date(a[2],a[0]-1,a[1]):(t.startsWith("d")||t.startsWith("DD"))&&(i=new Date(a[2],a[1]-1,a[0]))}else t.includes(".")?i=new Date(e.split(".")[2],e.split(".")[1]-1,e.split(".")[0]):t.includes("F")||t.includes("M")?i=new Date(e):i=new Date(e);if(isNaN(i.getTime()))return{valid:!1};if("Y-m-d"===t||"YYYY-MM-DD"===t){const t=i.toISOString().split("T")[0],a=8===e.length?`${e.slice(0,4)}-${e.slice(4,6).padStart(2,"0")}-${e.slice(6,8).padStart(2,"0")}`:e;return{valid:t===a||t===e}}if(t.match(/^m{1,2}[-\/]Y{4}$/)){const t=parseInt(e.split(/[-\/]/)[0]);return{valid:t>=1&&t<=12}}return{valid:!0}}catch(e){return{valid:!1}}}function validateAfter(e,t){if(""===e||null===e||void 0===e)return{valid:!0};const i=new Date(t[0]),a=new Date(e);return isNaN(i.getTime())||isNaN(a.getTime())?{valid:!1}:{valid:a>i}}function validateBefore(e,t){if(""===e||null===e||void 0===e)return{valid:!0};const i=new Date(t[0]),a=new Date(e);return isNaN(i.getTime())||isNaN(a.getTime())?{valid:!1}:{valid:a<i}}function validateAfterOrEqual(e,t,i,a){if(""===e||null===e||void 0===e)return{valid:!0};let n;const l=i.querySelector(`[${a}="${t[0]}"]`);if(l){const e=getFieldValue(l);n=new Date(e)}else n=new Date(t[0]);const r=new Date(e);return isNaN(n.getTime())||isNaN(r.getTime())?{valid:!1}:{valid:r>=n}}function validateBeforeOrEqual(e,t,i,a){if(""===e||null===e||void 0===e)return{valid:!0};let n;const l=i.querySelector(`[${a}="${t[0]}"]`);if(l){const e=getFieldValue(l);n=new Date(e)}else n=new Date(t[0]);const r=new Date(e);return isNaN(n.getTime())||isNaN(r.getTime())?{valid:!1}:{valid:r<=n}}function validateWeekend(e){if(""===e||null===e||void 0===e)return{valid:!0};const t=new Date(e);return isNaN(t.getTime())?{valid:!1}:{valid:0===t.getDay()||6===t.getDay()}}function validateTime(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(e)}}function validateUrl(e){if(""===e||null===e||void 0===e)return{valid:!0};try{return new URL(e),{valid:!0}}catch{return{valid:!1}}}function validateBoolean(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:["true","false","1","0",1,0,!0,!1].includes(e)}}function validateConfirmed(e,t,i,a){const n=t.getAttribute(a)+"_confirmation",l=i.querySelector(`[${a}="${n}"]`);if(!l)return{valid:!1,message:"Confirmation field not found"};return{valid:e===getFieldValue(l)}}function validateAlpha(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^[a-zA-Z]+$/.test(e)}}function validateAlphaNum(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^[a-zA-Z0-9]+$/.test(e)}}function validateSame(e,t,i,a){const n=i.querySelector(`[${a}="${t[0]}"]`);return n?{valid:e===getFieldValue(n)}:{valid:!1,message:"Comparison field not found"}}function validateDifferent(e,t,i,a){const n=i.querySelector(`[${a}="${t[0]}"]`);return n?{valid:e!==getFieldValue(n)}:{valid:!0}}function validateIn(e,t){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:t.includes(String(e))}}function validateNotIn(e,t){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:!t.includes(String(e))}}function validateRegex(e,t){if(""===e||null===e||void 0===e)return{valid:!0};try{const i=t[0].replace(/^\/|\/$/g,"");return{valid:new RegExp(i).test(e)}}catch(e){return{valid:!1,message:"Invalid regex pattern"}}}function validateJson(e){if(""===e||null===e||void 0===e)return{valid:!0};try{return JSON.parse(e),{valid:!0}}catch{return{valid:!1}}}function validateIp(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:validateIpv4(e).valid||validateIpv6(e).valid}}function validateIpv4(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(e)}}function validateIpv6(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/.test(e)}}function validateUuid(e){if(""===e||null===e||void 0===e)return{valid:!0};return{valid:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}}function validateDigits(e,t){if(""===e||null===e||void 0===e)return{valid:!0};const i=parseInt(t[0]);return{valid:/^\d+$/.test(e)&&String(e).length===i}}function validateDigitsBetween(e,t){if(""===e||null===e||void 0===e)return{valid:!0};const i=parseInt(t[0]),a=parseInt(t[1]),n=String(e).length;return{valid:/^\d+$/.test(e)&&n>=i&&n<=a}}function validateCurrency(e,t){if(""===e||null===e||void 0===e)return{valid:!0};const i=t[0]?parseInt(t[0]):16,a=String(e);if(a.length>i)return{valid:!1};if(/[eE]/.test(a))return{valid:!1};if(!/^[0-9,\.]+$/.test(a))return{valid:!1};const n=a.split(".");if(n.length>2)return{valid:!1};if(2===n.length&&!/^\d+$/.test(n[1]))return{valid:!1};return!/^[0-9,]*$/.test(n[0])?{valid:!1}:{valid:!0}}function validateMinLength(e,t){if(""===e||null===e||void 0===e)return{valid:!0};try{return{valid:String(e).length>=parseInt(t[0])}}catch(e){return console.error("Error in min_length validation:",e),{valid:!1}}}function validateMaxLength(e,t){if(""===e||null===e||void 0===e)return{valid:!0};try{return{valid:String(e).length<=parseInt(t[0])}}catch(e){return console.error("Error in max_length validation:",e),{valid:!1}}}function validateAlphaDash(e){if(""===e||null===e||void 0===e)return{valid:!0};try{return{valid:/^[a-zA-Z0-9_-]+$/.test(e)}}catch(e){return console.error("Error in alpha_dash validation:",e),{valid:!1}}}function validateLowercase(e){if(""===e||null===e||void 0===e)return{valid:!0};try{return{valid:String(e).toLowerCase()===String(e)}}catch(e){return console.error("Error in lowercase validation:",e),{valid:!1}}}function validateUppercase(e){if(""===e||null===e||void 0===e)return{valid:!0};try{return{valid:String(e).toUpperCase()===String(e)}}catch(e){return console.error("Error in uppercase validation:",e),{valid:!1}}}function validateDecimal(e,t){if(""===e||null===e||void 0===e)return{valid:!0};try{let i=1,a=null;if(t&&t.length>0&&(1===t.length?(i=parseInt(t[0]),a=i):t.length>=2&&(i=parseInt(t[0]),a=parseInt(t[1]))),!/^[+-]?\d*\.?\d+$/.test(String(e)))return{valid:!1};const n=String(e).split(".");if(1===n.length)return{valid:0===i};const l=n[1].length;return null!==a?{valid:l>=i&&l<=a}:{valid:l>=i}}catch(e){return console.error("Error in decimal validation:",e),{valid:!1}}}function validateGreaterThan(e,t,i,a){if(""===e||null===e||void 0===e)return{valid:!0};try{if(0===t.length)return{valid:!1};let n;const l=i.querySelector(`[${a}="${t[0]}"]`);return n=l?getFieldValue(l):t[0],isNumericValue(e)&&isNumericValue(n)?{valid:parseFloat(e)>parseFloat(n)}:{valid:String(e).length>String(n).length}}catch(e){return console.error("Error in gt validation:",e),{valid:!1}}}function validateLessThan(e,t,i,a){if(""===e||null===e||void 0===e)return{valid:!0};try{if(0===t.length)return{valid:!1};let n;const l=i.querySelector(`[${a}="${t[0]}"]`);return n=l?getFieldValue(l):t[0],isNumericValue(e)&&isNumericValue(n)?{valid:parseFloat(e)<parseFloat(n)}:{valid:String(e).length<String(n).length}}catch(e){return console.error("Error in lt validation:",e),{valid:!1}}}function validateLessThanOrEqual(e,t,i,a){if(""===e||null===e||void 0===e)return{valid:!0};try{if(0===t.length)return{valid:!1};let n;const l=i.querySelector(`[${a}="${t[0]}"]`);return n=l?getFieldValue(l):t[0],isNumericValue(e)&&isNumericValue(n)?{valid:parseFloat(e)<=parseFloat(n)}:{valid:String(e).length<=String(n).length}}catch(e){return console.error("Error in lte validation:",e),{valid:!1}}}function validateDimensions(e,t){if(""===e||null===e||void 0===e||!e||!e.length)return{valid:!0};try{if(!(e instanceof FileList)||0===e.length)return{valid:!1};const i={};for(const e of t){const t=e.split("=");t[0]&&t[1]&&(i[t[0].trim()]=parseInt(t[1].trim()))}const a=e[0];return["image/jpeg","image/png","image/gif","image/webp","image/bmp"].includes(a.type)?new Promise((e=>{const t=new Image,n=URL.createObjectURL(a);t.onload=function(){URL.revokeObjectURL(n);const a=t.width,l=t.height;let r=!0;i.min_width&&a<i.min_width&&(r=!1),i.max_width&&a>i.max_width&&(r=!1),i.min_height&&l<i.min_height&&(r=!1),i.max_height&&l>i.max_height&&(r=!1),i.width&&a!==i.width&&(r=!1),i.height&&l!==i.height&&(r=!1),e({valid:r})},t.onerror=function(){URL.revokeObjectURL(n),e({valid:!1})},t.src=n})):{valid:!0}}catch(e){return console.error("Error in dimensions validation:",e),{valid:!1}}}function validateNullable(){return{valid:!0}}function validateRequiredWith(e,t,i,a){try{let n=!1;for(const e of t){const t=i.querySelector(`[${a}="${e}"]`);if(!t)continue;const l=getFieldValue(t);if(null!==l&&void 0!==l&&""!==String(l).trim()){n=!0;break}}return n?validateRequired(e):{valid:!0}}catch(e){return console.error("Error in required_with validation:",e),{valid:!1}}}function validateRequiredUnless(e,t,i,a){try{if(t.length<2)return{valid:!0};const n=t[0],l=i.querySelector(`[${a}="${n}"]`);if(!l)return validateRequired(e);const r=getFieldValue(l),s=t.slice(1);return s.includes(String(r))?{valid:!0}:validateRequired(e)}catch(e){return console.error("Error in required_unless validation:",e),{valid:!1}}}function validateContains(e,t){if(""===e||null===e||void 0===e)return{valid:!0};try{const i=String(e);for(const e of t)if(!i.includes(e))return{valid:!1};return{valid:!0}}catch(e){return console.error("Error in contains validation:",e),{valid:!1}}}function validateDoesntContain(e,t){if(""===e||null===e||void 0===e)return{valid:!0};try{const i=String(e);for(const e of t)if(i.includes(e))return{valid:!1};return{valid:!0}}catch(e){return console.error("Error in doesnt_contain validation:",e),{valid:!1}}}function validateAccepted(e){try{return{valid:[!0,"true",1,"1","yes","on"].includes(e)}}catch(e){return console.error("Error in accepted validation:",e),{valid:!1}}}function validateImage(e){if(""===e||null===e||void 0===e||!e)return{valid:!0};try{if(!(e instanceof FileList))return{valid:!1};if(0===e.length)return{valid:!0};return{valid:["image/jpeg","image/png","image/gif","image/webp","image/svg+xml","image/bmp","image/tiff"].includes(e[0].type)}}catch(e){return console.error("Error in image validation:",e),{valid:!1}}}function getErrorMessage(e,t,i,a,n){const{name:l,parameters:r}=t,s=e=>{let t=e.replace(/:label/g,a).replace(/:attribute/g,a).replace(/:field/g,e).replace(/:value/g,"the input");return r&&r.length>0&&(r.forEach(((e,i)=>{t=t.replace(new RegExp(`:param\\[${i}\\]`,"g"),e)})),t=t.replace(/:min/g,r[0]).replace(/:max/g,r.length>1?r[1]:r[0]),"between"===l?t=t.replace(/:min_value/g,r[0]).replace(/:max_value/g,r[1]):["mimes","in","not_in"].includes(l)?t=t.replace(/:values/g,r.join(", ")):"dimensions"===l&&r.forEach((e=>{const[i,a]=e.split("=");i&&a&&(t=t.replace(new RegExp(`:${i.trim()}`,"g"),a.trim()))}))),t};if(i[l])return s(i[l]);if(n)return s(n);const o={required:`The ${a} field is required.`,required_if:`The ${a} field is required when specified conditions are met.`,string:`The ${a} field must be a string.`,numeric:`The ${a} field must be a number.`,integer:`The ${a} field must be an integer.`,email:`The ${a} field must be a valid email address.`,array:`The ${a} field must be an array.`,file:`The ${a} field must be a file.`,size:`The ${a} file size must not exceed ${r[0]||8}MB.`,mimes:`The ${a} file must be a file of type: ${r.join(", ")}.`,min:`The ${a} field must be at least ${r[0]}.`,max:`The ${a} field must not be greater than ${r[0]}.`,between:`The ${a} field must be between ${r[0]} and ${r[1]}.`,date:`The ${a} field must be a valid date.`,date_format:`The ${a} field must match the format ${r[0]}.`,after:`The ${a} field must be a date after ${r[0]}.`,before:`The ${a} field must be a date before ${r[0]}.`,after_or_equal:`The ${a} field must be a date after or equal to ${r[0]}.`,before_or_equal:`The ${a} field must be a date before or equal to ${r[0]}.`,weekend:`The ${a} field must be a weekend date.`,time:`The ${a} field must be a valid time.`,url:`The ${a} field must be a valid URL.`,boolean:`The ${a} field must be true or false.`,confirmed:`The ${a} confirmation does not match.`,alpha:`The ${a} field must contain only letters.`,alpha_num:`The ${a} field must contain only letters and numbers.`,same:`The ${a} field must match ${r[0]}.`,different:`The ${a} field must be different from ${r[0]}.`,in:`The selected ${a} is invalid.`,not_in:`The selected ${a} is invalid.`,regex:`The ${a} field format is invalid.`,json:`The ${a} field must be a valid JSON string.`,ip:`The ${a} field must be a valid IP address.`,ipv4:`The ${a} field must be a valid IPv4 address.`,ipv6:`The ${a} field must be a valid IPv6 address.`,uuid:`The ${a} field must be a valid UUID.`,digits:`The ${a} field must be ${r[0]} digits.`,digits_between:`The ${a} field must be between ${r[0]} and ${r[1]} digits.`,min_length:`The ${a} must be at least ${r[0]} characters.`,max_length:`The ${a} may not be greater than ${r[0]} characters.`,alpha_dash:`The ${a} may only contain letters, numbers, dashes and underscores.`,lowercase:`The ${a} must be lowercase.`,uppercase:`The ${a} must be uppercase.`,decimal:`The ${a} must have ${r.length>1?`${r[0]} to ${r[1]}`:r[0]} decimal places.`,gt:`The ${a} must be greater than ${r[0]}.`,lt:`The ${a} must be less than ${r[0]}.`,lte:`The ${a} must be less than or equal to ${r[0]}.`,dimensions:`The ${a} has invalid image dimensions.`,required_with:`The ${a} field is required when ${r.join(", ")} is present.`,required_unless:`The ${a} field is required unless ${r[0]} is in ${r.slice(1).join(", ")}.`,contains:`The ${a} field must contain: ${r.join(", ")}.`,doesnt_contain:`The ${a} field must not contain: ${r.join(", ")}.`,accepted:`The ${a} must be accepted.`,image:`The ${a} must be an image.`};return s(o[l]||`The ${a} field is invalid.`)}function showToastrErrors(e,t="single"){if("undefined"!=typeof toastr){let i={enableHtml:!0,closeButton:!0,debug:!1,newestOnTop:!0,progressBar:!0,positionClass:"toast-top-right",preventDuplicates:!0,showDuration:"850",hideDuration:"1000",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"};if("single"===t){const t=Object.values(e);if(t.length>0){const a=`<ul style="margin: 0; padding-left: 20px; line-height: 1.5;">${t.map((e=>`<li style="margin-bottom: 5px;">${e}</li>`)).join("")}</ul>`;toastr.error(a,"Validation Errors",i)}}else Object.values(e).forEach((e=>{toastr.error(e,"Error",i)}))}else{const i=document.getElementById("validation_messages");if(!i)return void console.warn("Neither toastr nor #validation_messages element found for displaying errors");if(i.innerHTML="","single"===t){const t=Object.values(e);if(t.length>0){const e=document.createElement("div");e.className="error-list",e.innerHTML=`\n                    <strong>Validation Errors:</strong>\n                    <ul>\n                        ${t.map((e=>`<li>${e}</li>`)).join("")}\n                    </ul>\n                `,i.appendChild(e)}}else Object.values(e).forEach((e=>{const t=document.createElement("div");t.className="error-list",t.innerHTML=`<strong>Error:</strong> ${e}`,i.appendChild(t)}))}}
